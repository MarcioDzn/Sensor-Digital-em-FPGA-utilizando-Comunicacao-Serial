|main
clk => clk.IN4
pc_in => pc_in.IN1
dht <> DHT11:SENSOR.dat_io
pc_out << uart:UART.tx
state[0] << main_state_machine:MAQUINA_ESTADOS.state
state[1] << main_state_machine:MAQUINA_ESTADOS.state
ebyte1[0] << byte1[0].DB_MAX_OUTPUT_PORT_TYPE
ebyte1[1] << byte1[1].DB_MAX_OUTPUT_PORT_TYPE
ebyte1[2] << byte1[2].DB_MAX_OUTPUT_PORT_TYPE
ebyte1[3] << byte1[3].DB_MAX_OUTPUT_PORT_TYPE
ebyte1[4] << byte1[4].DB_MAX_OUTPUT_PORT_TYPE
ebyte1[5] << byte1[5].DB_MAX_OUTPUT_PORT_TYPE
ebyte1[6] << byte1[6].DB_MAX_OUTPUT_PORT_TYPE
ebyte1[7] << byte1[7].DB_MAX_OUTPUT_PORT_TYPE
ebyte2[0] << byte2[0].DB_MAX_OUTPUT_PORT_TYPE
ebyte2[1] << byte2[1].DB_MAX_OUTPUT_PORT_TYPE
ebyte2[2] << byte2[2].DB_MAX_OUTPUT_PORT_TYPE
ebyte2[3] << byte2[3].DB_MAX_OUTPUT_PORT_TYPE
ebyte2[4] << byte2[4].DB_MAX_OUTPUT_PORT_TYPE
ebyte2[5] << byte2[5].DB_MAX_OUTPUT_PORT_TYPE
ebyte2[6] << byte2[6].DB_MAX_OUTPUT_PORT_TYPE
ebyte2[7] << byte2[7].DB_MAX_OUTPUT_PORT_TYPE


|main|uart:UART
din[0] => din[0].IN1
din[1] => din[1].IN1
din[2] => din[2].IN1
din[3] => din[3].IN1
din[4] => din[4].IN1
din[5] => din[5].IN1
din[6] => din[6].IN1
din[7] => din[7].IN1
wr_en => wr_en.IN1
clk_50m => clk_50m.IN3
tx <= transmitter:uart_tx.tx
tx_busy <= transmitter:uart_tx.tx_busy
rx => rx.IN1
rdy <= receiver:uart_rx.rdy
rdy_clr => rdy_clr.IN1
dout[0] <= receiver:uart_rx.data
dout[1] <= receiver:uart_rx.data
dout[2] <= receiver:uart_rx.data
dout[3] <= receiver:uart_rx.data
dout[4] <= receiver:uart_rx.data
dout[5] <= receiver:uart_rx.data
dout[6] <= receiver:uart_rx.data
dout[7] <= receiver:uart_rx.data


|main|uart:UART|baud_rate_gen:uart_baud
clk_50m => tx_acc[0].CLK
clk_50m => tx_acc[1].CLK
clk_50m => tx_acc[2].CLK
clk_50m => tx_acc[3].CLK
clk_50m => tx_acc[4].CLK
clk_50m => tx_acc[5].CLK
clk_50m => tx_acc[6].CLK
clk_50m => tx_acc[7].CLK
clk_50m => tx_acc[8].CLK
clk_50m => tx_acc[9].CLK
clk_50m => tx_acc[10].CLK
clk_50m => tx_acc[11].CLK
clk_50m => tx_acc[12].CLK
clk_50m => rx_acc[0].CLK
clk_50m => rx_acc[1].CLK
clk_50m => rx_acc[2].CLK
clk_50m => rx_acc[3].CLK
clk_50m => rx_acc[4].CLK
clk_50m => rx_acc[5].CLK
clk_50m => rx_acc[6].CLK
clk_50m => rx_acc[7].CLK
clk_50m => rx_acc[8].CLK
rxclk_en <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
txclk_en <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


|main|uart:UART|transmitter:uart_tx
din[0] => data.DATAB
din[1] => data.DATAB
din[2] => data.DATAB
din[3] => data.DATAB
din[4] => data.DATAB
din[5] => data.DATAB
din[6] => data.DATAB
din[7] => data.DATAB
wr_en => state.OUTPUTSELECT
wr_en => state.OUTPUTSELECT
wr_en => state.OUTPUTSELECT
wr_en => state.OUTPUTSELECT
wr_en => data.OUTPUTSELECT
wr_en => data.OUTPUTSELECT
wr_en => data.OUTPUTSELECT
wr_en => data.OUTPUTSELECT
wr_en => data.OUTPUTSELECT
wr_en => data.OUTPUTSELECT
wr_en => data.OUTPUTSELECT
wr_en => data.OUTPUTSELECT
wr_en => bitpos.OUTPUTSELECT
wr_en => bitpos.OUTPUTSELECT
wr_en => bitpos.OUTPUTSELECT
clk_50m => tx~reg0.CLK
clk_50m => bitpos[0].CLK
clk_50m => bitpos[1].CLK
clk_50m => bitpos[2].CLK
clk_50m => data[0].CLK
clk_50m => data[1].CLK
clk_50m => data[2].CLK
clk_50m => data[3].CLK
clk_50m => data[4].CLK
clk_50m => data[5].CLK
clk_50m => data[6].CLK
clk_50m => data[7].CLK
clk_50m => state~4.DATAIN
clken => tx.OUTPUTSELECT
clken => state.OUTPUTSELECT
clken => state.OUTPUTSELECT
clken => state.OUTPUTSELECT
clken => state.OUTPUTSELECT
clken => state.OUTPUTSELECT
clken => state.OUTPUTSELECT
clken => state.OUTPUTSELECT
clken => state.OUTPUTSELECT
clken => bitpos.OUTPUTSELECT
clken => bitpos.OUTPUTSELECT
clken => bitpos.OUTPUTSELECT
clken => tx.OUTPUTSELECT
clken => tx.OUTPUTSELECT
clken => state.OUTPUTSELECT
clken => state.OUTPUTSELECT
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_busy <= tx_busy.DB_MAX_OUTPUT_PORT_TYPE


|main|uart:UART|receiver:uart_rx
rx => scratch.DATAB
rx => scratch.DATAB
rx => scratch.DATAB
rx => scratch.DATAB
rx => scratch.DATAB
rx => scratch.DATAB
rx => scratch.DATAB
rx => scratch.DATAB
rx => always0.IN1
rx => always0.IN1
rdy <= rdy~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdy_clr => ~NO_FANOUT~
clk_50m => data[0]~reg0.CLK
clk_50m => data[1]~reg0.CLK
clk_50m => data[2]~reg0.CLK
clk_50m => data[3]~reg0.CLK
clk_50m => data[4]~reg0.CLK
clk_50m => data[5]~reg0.CLK
clk_50m => data[6]~reg0.CLK
clk_50m => data[7]~reg0.CLK
clk_50m => scratch[0].CLK
clk_50m => scratch[1].CLK
clk_50m => scratch[2].CLK
clk_50m => scratch[3].CLK
clk_50m => scratch[4].CLK
clk_50m => scratch[5].CLK
clk_50m => scratch[6].CLK
clk_50m => scratch[7].CLK
clk_50m => bitpos[0].CLK
clk_50m => bitpos[1].CLK
clk_50m => bitpos[2].CLK
clk_50m => bitpos[3].CLK
clk_50m => sample[0].CLK
clk_50m => sample[1].CLK
clk_50m => sample[2].CLK
clk_50m => sample[3].CLK
clk_50m => rdy~reg0.CLK
clk_50m => state~3.DATAIN
clken => state.OUTPUTSELECT
clken => state.OUTPUTSELECT
clken => state.OUTPUTSELECT
clken => rdy.OUTPUTSELECT
clken => data[2]~reg0.ENA
clken => data[1]~reg0.ENA
clken => data[0]~reg0.ENA
clken => data[3]~reg0.ENA
clken => data[4]~reg0.ENA
clken => data[5]~reg0.ENA
clken => data[6]~reg0.ENA
clken => data[7]~reg0.ENA
clken => scratch[0].ENA
clken => scratch[1].ENA
clken => scratch[2].ENA
clken => scratch[3].ENA
clken => scratch[4].ENA
clken => scratch[5].ENA
clken => scratch[6].ENA
clken => scratch[7].ENA
clken => bitpos[0].ENA
clken => bitpos[1].ENA
clken => bitpos[2].ENA
clken => bitpos[3].ENA
clken => sample[0].ENA
clken => sample[1].ENA
clken => sample[2].ENA
clken => sample[3].ENA
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|DHT11:SENSOR
clk_50mhz => count_50[0].CLK
clk_50mhz => count_50[1].CLK
clk_50mhz => count_50[2].CLK
clk_50mhz => count_50[3].CLK
clk_50mhz => count_50[4].CLK
clk_50mhz => count_50[5].CLK
clk_50mhz => clk_1mhz.CLK
start => start_f1.DATAIN
rst_n => data_cnt[0].ACLR
rst_n => data_cnt[1].ACLR
rst_n => data_cnt[2].ACLR
rst_n => data_cnt[3].ACLR
rst_n => data_cnt[4].ACLR
rst_n => data_cnt[5].ACLR
rst_n => cnt[0].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[3].ACLR
rst_n => cnt[4].ACLR
rst_n => cnt[5].ACLR
rst_n => cnt[6].ACLR
rst_n => cnt[7].ACLR
rst_n => cnt[8].ACLR
rst_n => cnt[9].ACLR
rst_n => cnt[10].ACLR
rst_n => cnt[11].ACLR
rst_n => cnt[12].ACLR
rst_n => cnt[13].ACLR
rst_n => cnt[14].ACLR
rst_n => cnt[15].ACLR
rst_n => data_buf[0].ACLR
rst_n => data_buf[1].ACLR
rst_n => data_buf[2].ACLR
rst_n => data_buf[3].ACLR
rst_n => data_buf[4].ACLR
rst_n => data_buf[5].ACLR
rst_n => data_buf[6].ACLR
rst_n => data_buf[7].ACLR
rst_n => data_buf[8].ACLR
rst_n => data_buf[9].ACLR
rst_n => data_buf[10].ACLR
rst_n => data_buf[11].ACLR
rst_n => data_buf[12].ACLR
rst_n => data_buf[13].ACLR
rst_n => data_buf[14].ACLR
rst_n => data_buf[15].ACLR
rst_n => data_buf[16].ACLR
rst_n => data_buf[17].ACLR
rst_n => data_buf[18].ACLR
rst_n => data_buf[19].ACLR
rst_n => data_buf[20].ACLR
rst_n => data_buf[21].ACLR
rst_n => data_buf[22].ACLR
rst_n => data_buf[23].ACLR
rst_n => data_buf[24].ACLR
rst_n => data_buf[25].ACLR
rst_n => data_buf[26].ACLR
rst_n => data_buf[27].ACLR
rst_n => data_buf[28].ACLR
rst_n => data_buf[29].ACLR
rst_n => data_buf[30].ACLR
rst_n => data_buf[31].ACLR
rst_n => data_buf[32].ACLR
rst_n => data_buf[33].ACLR
rst_n => data_buf[34].ACLR
rst_n => data_buf[35].ACLR
rst_n => data_buf[36].ACLR
rst_n => data_buf[37].ACLR
rst_n => data_buf[38].ACLR
rst_n => data_buf[39].ACLR
rst_n => dout.PRESET
rst_n => read_flag.PRESET
rst_n => done_reg.ACLR
rst_n => start_rising.ACLR
rst_n => start_f2.ACLR
rst_n => start_f1.ACLR
rst_n => state~14.DATAIN
rst_n => error_reg.ENA
rst_n => data[39].ENA
rst_n => data[38].ENA
rst_n => data[37].ENA
rst_n => data[36].ENA
rst_n => data[35].ENA
rst_n => data[34].ENA
rst_n => data[33].ENA
rst_n => data[32].ENA
rst_n => data[31].ENA
rst_n => data[30].ENA
rst_n => data[29].ENA
rst_n => data[28].ENA
rst_n => data[27].ENA
rst_n => data[26].ENA
rst_n => data[25].ENA
rst_n => data[24].ENA
rst_n => data[23].ENA
rst_n => data[22].ENA
rst_n => data[21].ENA
rst_n => data[20].ENA
rst_n => data[19].ENA
rst_n => data[18].ENA
rst_n => data[17].ENA
rst_n => data[16].ENA
rst_n => data[15].ENA
rst_n => data[14].ENA
rst_n => data[13].ENA
rst_n => data[12].ENA
rst_n => data[11].ENA
rst_n => data[10].ENA
rst_n => data[9].ENA
rst_n => count_5_sec[0].ENA
rst_n => data[8].ENA
rst_n => count_5_sec[22].ENA
rst_n => count_5_sec[21].ENA
rst_n => count_5_sec[20].ENA
rst_n => count_5_sec[19].ENA
rst_n => count_5_sec[18].ENA
rst_n => count_5_sec[17].ENA
rst_n => count_5_sec[16].ENA
rst_n => count_5_sec[15].ENA
rst_n => count_5_sec[14].ENA
rst_n => count_5_sec[13].ENA
rst_n => count_5_sec[12].ENA
rst_n => count_5_sec[11].ENA
rst_n => count_5_sec[10].ENA
rst_n => count_5_sec[9].ENA
rst_n => count_5_sec[8].ENA
rst_n => count_5_sec[7].ENA
rst_n => count_5_sec[6].ENA
rst_n => count_5_sec[5].ENA
rst_n => count_5_sec[4].ENA
rst_n => count_5_sec[3].ENA
rst_n => count_5_sec[2].ENA
rst_n => count_5_sec[1].ENA
dat_io <> dat_io
HUM_INT[0] <= data[32].DB_MAX_OUTPUT_PORT_TYPE
HUM_INT[1] <= data[33].DB_MAX_OUTPUT_PORT_TYPE
HUM_INT[2] <= data[34].DB_MAX_OUTPUT_PORT_TYPE
HUM_INT[3] <= data[35].DB_MAX_OUTPUT_PORT_TYPE
HUM_INT[4] <= data[36].DB_MAX_OUTPUT_PORT_TYPE
HUM_INT[5] <= data[37].DB_MAX_OUTPUT_PORT_TYPE
HUM_INT[6] <= data[38].DB_MAX_OUTPUT_PORT_TYPE
HUM_INT[7] <= data[39].DB_MAX_OUTPUT_PORT_TYPE
HUM_FLOAT[0] <= data[24].DB_MAX_OUTPUT_PORT_TYPE
HUM_FLOAT[1] <= data[25].DB_MAX_OUTPUT_PORT_TYPE
HUM_FLOAT[2] <= data[26].DB_MAX_OUTPUT_PORT_TYPE
HUM_FLOAT[3] <= data[27].DB_MAX_OUTPUT_PORT_TYPE
HUM_FLOAT[4] <= data[28].DB_MAX_OUTPUT_PORT_TYPE
HUM_FLOAT[5] <= data[29].DB_MAX_OUTPUT_PORT_TYPE
HUM_FLOAT[6] <= data[30].DB_MAX_OUTPUT_PORT_TYPE
HUM_FLOAT[7] <= data[31].DB_MAX_OUTPUT_PORT_TYPE
TEMP_INT[0] <= data[16].DB_MAX_OUTPUT_PORT_TYPE
TEMP_INT[1] <= data[17].DB_MAX_OUTPUT_PORT_TYPE
TEMP_INT[2] <= data[18].DB_MAX_OUTPUT_PORT_TYPE
TEMP_INT[3] <= data[19].DB_MAX_OUTPUT_PORT_TYPE
TEMP_INT[4] <= data[20].DB_MAX_OUTPUT_PORT_TYPE
TEMP_INT[5] <= data[21].DB_MAX_OUTPUT_PORT_TYPE
TEMP_INT[6] <= data[22].DB_MAX_OUTPUT_PORT_TYPE
TEMP_INT[7] <= data[23].DB_MAX_OUTPUT_PORT_TYPE
TEMP_FLOAT[0] <= data[8].DB_MAX_OUTPUT_PORT_TYPE
TEMP_FLOAT[1] <= data[9].DB_MAX_OUTPUT_PORT_TYPE
TEMP_FLOAT[2] <= data[10].DB_MAX_OUTPUT_PORT_TYPE
TEMP_FLOAT[3] <= data[11].DB_MAX_OUTPUT_PORT_TYPE
TEMP_FLOAT[4] <= data[12].DB_MAX_OUTPUT_PORT_TYPE
TEMP_FLOAT[5] <= data[13].DB_MAX_OUTPUT_PORT_TYPE
TEMP_FLOAT[6] <= data[14].DB_MAX_OUTPUT_PORT_TYPE
TEMP_FLOAT[7] <= data[15].DB_MAX_OUTPUT_PORT_TYPE
error <= error_reg.DB_MAX_OUTPUT_PORT_TYPE
done <= done_reg.DB_MAX_OUTPUT_PORT_TYPE


|main|instr_decoder:DECODIFICADOR
INSTR[0] => Equal0.IN1
INSTR[0] => Equal1.IN2
INSTR[0] => Equal2.IN1
INSTR[0] => Equal3.IN2
INSTR[0] => Equal4.IN2
INSTR[0] => Equal5.IN0
INSTR[0] => Equal6.IN2
INSTR[1] => Equal0.IN0
INSTR[1] => Equal1.IN1
INSTR[1] => Equal2.IN2
INSTR[1] => Equal3.IN1
INSTR[1] => Equal4.IN1
INSTR[1] => Equal5.IN2
INSTR[1] => Equal6.IN0
INSTR[2] => Equal0.IN2
INSTR[2] => Equal1.IN0
INSTR[2] => Equal2.IN0
INSTR[2] => Equal3.IN0
INSTR[2] => Equal4.IN0
INSTR[2] => Equal5.IN1
INSTR[2] => Equal6.IN1
CONTINUOUS_EN <= CONTINUOUS_EN.DB_MAX_OUTPUT_PORT_TYPE
BREAK_CONTINUOUS <= BREAK_CONTINUOUS.DB_MAX_OUTPUT_PORT_TYPE
DATA_TYPE[0] <= DATA_TYPE.DB_MAX_OUTPUT_PORT_TYPE
DATA_TYPE[1] <= DATA_TYPE.DB_MAX_OUTPUT_PORT_TYPE


|main|request_separator:SEPARADOR
IDLE => DONE_OUT~reg0.ALOAD
EN => ADDR_REG[0].CLK
EN => ADDR_REG[1].CLK
EN => ADDR_REG[2].CLK
EN => ADDR_REG[3].CLK
EN => ADDR_REG[4].CLK
EN => counter.CLK
EN => DONE.CLK
EN => INSTR_REG[0].CLK
EN => INSTR_REG[1].CLK
EN => INSTR_REG[2].CLK
DATA[0] => ADDR_REG[0].DATAIN
DATA[0] => INSTR_REG[0].DATAIN
DATA[1] => ADDR_REG[1].DATAIN
DATA[1] => INSTR_REG[1].DATAIN
DATA[2] => ADDR_REG[2].DATAIN
DATA[2] => INSTR_REG[2].DATAIN
DATA[3] => ADDR_REG[3].DATAIN
DATA[4] => ADDR_REG[4].DATAIN
DATA[5] => ~NO_FANOUT~
DATA[6] => ~NO_FANOUT~
DATA[7] => ~NO_FANOUT~
CONTINUOUS_EN => DONE_OUT.OUTPUTSELECT
INSTR[0] <= INSTR_REG[0].DB_MAX_OUTPUT_PORT_TYPE
INSTR[1] <= INSTR_REG[1].DB_MAX_OUTPUT_PORT_TYPE
INSTR[2] <= INSTR_REG[2].DB_MAX_OUTPUT_PORT_TYPE
ADDR[0] <= ADDR_REG[0].DB_MAX_OUTPUT_PORT_TYPE
ADDR[1] <= ADDR_REG[1].DB_MAX_OUTPUT_PORT_TYPE
ADDR[2] <= ADDR_REG[2].DB_MAX_OUTPUT_PORT_TYPE
ADDR[3] <= ADDR_REG[3].DB_MAX_OUTPUT_PORT_TYPE
ADDR[4] <= ADDR_REG[4].DB_MAX_OUTPUT_PORT_TYPE
DONE_OUT <= DONE_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|main_state_machine:MAQUINA_ESTADOS
clk_50m => pack~reg0.CLK
clk_50m => idle~reg0.CLK
clk_50m => en_request~reg0.CLK
clk_50m => dht_out~reg0.CLK
clk_50m => state[0]~reg0.CLK
clk_50m => state[1]~reg0.CLK
done_uart_rx => always0.IN0
done_uart_rx => always0.IN0
done_uart_tx => Mux3.IN3
done_uart_tx => Mux0.IN2
done_uart_tx => Mux1.IN3
done_uart_tx => en_request.DATAB
done_dht => Mux0.IN3
done_dht => Mux4.IN3
done_dht => Mux1.IN2
done_dht => Mux2.IN3
break_continuous => always0.IN1
break_continuous => always0.IN1
state[0] <= state[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[1] <= state[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dht_out <= dht_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
en_request <= en_request~reg0.DB_MAX_OUTPUT_PORT_TYPE
idle <= idle~reg0.DB_MAX_OUTPUT_PORT_TYPE
pack <= pack~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|data_selector:SELETOR
DATA_TYPE[0] => Equal0.IN0
DATA_TYPE[1] => Equal0.IN1
TEMP_INT[0] => DATA_INT.DATAB
TEMP_INT[1] => DATA_INT.DATAB
TEMP_INT[2] => DATA_INT.DATAB
TEMP_INT[3] => DATA_INT.DATAB
TEMP_INT[4] => DATA_INT.DATAB
TEMP_INT[5] => DATA_INT.DATAB
TEMP_INT[6] => DATA_INT.DATAB
TEMP_INT[7] => DATA_INT.DATAB
TEMP_FLOAT[0] => DATA_FLOAT.DATAB
TEMP_FLOAT[1] => DATA_FLOAT.DATAB
TEMP_FLOAT[2] => DATA_FLOAT.DATAB
TEMP_FLOAT[3] => DATA_FLOAT.DATAB
TEMP_FLOAT[4] => DATA_FLOAT.DATAB
TEMP_FLOAT[5] => DATA_FLOAT.DATAB
TEMP_FLOAT[6] => DATA_FLOAT.DATAB
TEMP_FLOAT[7] => DATA_FLOAT.DATAB
HUMI_INT[0] => DATA_INT.DATAA
HUMI_INT[1] => DATA_INT.DATAA
HUMI_INT[2] => DATA_INT.DATAA
HUMI_INT[3] => DATA_INT.DATAA
HUMI_INT[4] => DATA_INT.DATAA
HUMI_INT[5] => DATA_INT.DATAA
HUMI_INT[6] => DATA_INT.DATAA
HUMI_INT[7] => DATA_INT.DATAA
HUMI_FLOAT[0] => DATA_FLOAT.DATAA
HUMI_FLOAT[1] => DATA_FLOAT.DATAA
HUMI_FLOAT[2] => DATA_FLOAT.DATAA
HUMI_FLOAT[3] => DATA_FLOAT.DATAA
HUMI_FLOAT[4] => DATA_FLOAT.DATAA
HUMI_FLOAT[5] => DATA_FLOAT.DATAA
HUMI_FLOAT[6] => DATA_FLOAT.DATAA
HUMI_FLOAT[7] => DATA_FLOAT.DATAA
DATA_INT[0] <= DATA_INT.DB_MAX_OUTPUT_PORT_TYPE
DATA_INT[1] <= DATA_INT.DB_MAX_OUTPUT_PORT_TYPE
DATA_INT[2] <= DATA_INT.DB_MAX_OUTPUT_PORT_TYPE
DATA_INT[3] <= DATA_INT.DB_MAX_OUTPUT_PORT_TYPE
DATA_INT[4] <= DATA_INT.DB_MAX_OUTPUT_PORT_TYPE
DATA_INT[5] <= DATA_INT.DB_MAX_OUTPUT_PORT_TYPE
DATA_INT[6] <= DATA_INT.DB_MAX_OUTPUT_PORT_TYPE
DATA_INT[7] <= DATA_INT.DB_MAX_OUTPUT_PORT_TYPE
DATA_FLOAT[0] <= DATA_FLOAT.DB_MAX_OUTPUT_PORT_TYPE
DATA_FLOAT[1] <= DATA_FLOAT.DB_MAX_OUTPUT_PORT_TYPE
DATA_FLOAT[2] <= DATA_FLOAT.DB_MAX_OUTPUT_PORT_TYPE
DATA_FLOAT[3] <= DATA_FLOAT.DB_MAX_OUTPUT_PORT_TYPE
DATA_FLOAT[4] <= DATA_FLOAT.DB_MAX_OUTPUT_PORT_TYPE
DATA_FLOAT[5] <= DATA_FLOAT.DB_MAX_OUTPUT_PORT_TYPE
DATA_FLOAT[6] <= DATA_FLOAT.DB_MAX_OUTPUT_PORT_TYPE
DATA_FLOAT[7] <= DATA_FLOAT.DB_MAX_OUTPUT_PORT_TYPE


|main|packer:ORGANIZADOR
EN => BYTE3[0]~reg0.CLK
EN => BYTE3[1]~reg0.CLK
EN => BYTE3[2]~reg0.CLK
EN => BYTE3[3]~reg0.CLK
EN => BYTE3[4]~reg0.CLK
EN => BYTE3[5]~reg0.CLK
EN => BYTE3[6]~reg0.CLK
EN => BYTE3[7]~reg0.CLK
EN => BYTE2[0]~reg0.CLK
EN => BYTE2[1]~reg0.CLK
EN => BYTE2[2]~reg0.CLK
EN => BYTE2[3]~reg0.CLK
EN => BYTE2[4]~reg0.CLK
EN => BYTE2[5]~reg0.CLK
EN => BYTE2[6]~reg0.CLK
EN => BYTE2[7]~reg0.CLK
EN => BYTE1[0]~reg0.CLK
EN => BYTE1[1]~reg0.CLK
EN => BYTE1[2]~reg0.CLK
EN => BYTE1[3]~reg0.CLK
EN => BYTE1[4]~reg0.CLK
EN => BYTE1[5]~reg0.CLK
EN => BYTE1[6]~reg0.CLK
EN => BYTE1[7]~reg0.CLK
ERROR => always0.IN1
BREAK_CONTINUOUS => BYTE2.OUTPUTSELECT
BREAK_CONTINUOUS => BYTE3.OUTPUTSELECT
BREAK_CONTINUOUS => BYTE2.OUTPUTSELECT
BREAK_CONTINUOUS => BYTE2.OUTPUTSELECT
BREAK_CONTINUOUS => BYTE2.OUTPUTSELECT
BREAK_CONTINUOUS => BYTE2.OUTPUTSELECT
BREAK_CONTINUOUS => BYTE2.OUTPUTSELECT
BREAK_CONTINUOUS => BYTE2.OUTPUTSELECT
BREAK_CONTINUOUS => BYTE2.OUTPUTSELECT
BREAK_CONTINUOUS => BYTE2.OUTPUTSELECT
BREAK_CONTINUOUS => BYTE3.OUTPUTSELECT
BREAK_CONTINUOUS => BYTE3.OUTPUTSELECT
BREAK_CONTINUOUS => BYTE3.OUTPUTSELECT
BREAK_CONTINUOUS => BYTE3.OUTPUTSELECT
BREAK_CONTINUOUS => BYTE3.OUTPUTSELECT
BREAK_CONTINUOUS => BYTE3.OUTPUTSELECT
BREAK_CONTINUOUS => BYTE3.OUTPUTSELECT
BREAK_CONTINUOUS => BYTE3.OUTPUTSELECT
BREAK_CONTINUOUS => Mux0.IN2
BREAK_CONTINUOUS => Mux0.IN3
BREAK_CONTINUOUS => Mux1.IN3
BREAK_CONTINUOUS => Mux1.IN2
DATA_TYPE[0] => Decoder0.IN1
DATA_TYPE[0] => Mux0.IN5
DATA_TYPE[0] => Mux1.IN5
DATA_TYPE[0] => Mux2.IN5
DATA_TYPE[0] => Mux3.IN5
DATA_TYPE[0] => Mux4.IN5
DATA_TYPE[0] => Mux5.IN5
DATA_TYPE[0] => Mux6.IN5
DATA_TYPE[0] => Mux7.IN5
DATA_TYPE[0] => Mux8.IN5
DATA_TYPE[0] => Mux9.IN5
DATA_TYPE[0] => Mux10.IN5
DATA_TYPE[0] => Mux11.IN5
DATA_TYPE[0] => Mux12.IN5
DATA_TYPE[0] => Mux13.IN5
DATA_TYPE[0] => Mux14.IN5
DATA_TYPE[0] => Mux15.IN5
DATA_TYPE[0] => Mux16.IN5
DATA_TYPE[0] => Mux17.IN5
DATA_TYPE[0] => Equal0.IN0
DATA_TYPE[0] => Equal2.IN1
DATA_TYPE[1] => Decoder0.IN0
DATA_TYPE[1] => Mux0.IN4
DATA_TYPE[1] => Mux1.IN4
DATA_TYPE[1] => Mux2.IN4
DATA_TYPE[1] => Mux3.IN4
DATA_TYPE[1] => Mux4.IN4
DATA_TYPE[1] => Mux5.IN4
DATA_TYPE[1] => Mux6.IN4
DATA_TYPE[1] => Mux7.IN4
DATA_TYPE[1] => Mux8.IN4
DATA_TYPE[1] => Mux9.IN4
DATA_TYPE[1] => Mux10.IN4
DATA_TYPE[1] => Mux11.IN4
DATA_TYPE[1] => Mux12.IN4
DATA_TYPE[1] => Mux13.IN4
DATA_TYPE[1] => Mux14.IN4
DATA_TYPE[1] => Mux15.IN4
DATA_TYPE[1] => Mux16.IN4
DATA_TYPE[1] => Mux17.IN4
DATA_TYPE[1] => Equal0.IN1
DATA_TYPE[1] => Equal2.IN0
DATA_INT[0] => LessThan0.IN16
DATA_INT[0] => LessThan1.IN16
DATA_INT[0] => LessThan2.IN16
DATA_INT[0] => BYTE2.DATAA
DATA_INT[0] => BYTE2.DATAA
DATA_INT[0] => Equal1.IN7
DATA_INT[1] => LessThan0.IN15
DATA_INT[1] => LessThan1.IN15
DATA_INT[1] => LessThan2.IN15
DATA_INT[1] => BYTE2.DATAA
DATA_INT[1] => Equal1.IN6
DATA_INT[2] => LessThan0.IN14
DATA_INT[2] => LessThan1.IN14
DATA_INT[2] => LessThan2.IN14
DATA_INT[2] => BYTE2.DATAA
DATA_INT[2] => Equal1.IN5
DATA_INT[3] => LessThan0.IN13
DATA_INT[3] => LessThan1.IN13
DATA_INT[3] => LessThan2.IN13
DATA_INT[3] => BYTE2.DATAA
DATA_INT[3] => Equal1.IN4
DATA_INT[4] => LessThan0.IN12
DATA_INT[4] => LessThan1.IN12
DATA_INT[4] => LessThan2.IN12
DATA_INT[4] => BYTE2.DATAA
DATA_INT[4] => Equal1.IN3
DATA_INT[5] => LessThan0.IN11
DATA_INT[5] => LessThan1.IN11
DATA_INT[5] => LessThan2.IN11
DATA_INT[5] => BYTE2.DATAA
DATA_INT[5] => Equal1.IN2
DATA_INT[6] => LessThan0.IN10
DATA_INT[6] => LessThan1.IN10
DATA_INT[6] => LessThan2.IN10
DATA_INT[6] => BYTE2.DATAA
DATA_INT[6] => Equal1.IN1
DATA_INT[7] => LessThan0.IN9
DATA_INT[7] => LessThan1.IN9
DATA_INT[7] => LessThan2.IN9
DATA_INT[7] => BYTE2.DATAA
DATA_INT[7] => Equal1.IN0
DATA_FLOAT[0] => BYTE3.DATAA
DATA_FLOAT[0] => BYTE3.DATAA
DATA_FLOAT[1] => BYTE3.DATAA
DATA_FLOAT[2] => BYTE3.DATAA
DATA_FLOAT[3] => BYTE3.DATAA
DATA_FLOAT[4] => BYTE3.DATAA
DATA_FLOAT[5] => BYTE3.DATAA
DATA_FLOAT[6] => BYTE3.DATAA
DATA_FLOAT[7] => BYTE3.DATAA
BYTE1[0] <= BYTE1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE1[1] <= BYTE1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE1[2] <= BYTE1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE1[3] <= BYTE1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE1[4] <= BYTE1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE1[5] <= BYTE1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE1[6] <= BYTE1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE1[7] <= BYTE1[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE2[0] <= BYTE2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE2[1] <= BYTE2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE2[2] <= BYTE2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE2[3] <= BYTE2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE2[4] <= BYTE2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE2[5] <= BYTE2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE2[6] <= BYTE2[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE2[7] <= BYTE2[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE3[0] <= BYTE3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE3[1] <= BYTE3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE3[2] <= BYTE3[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE3[3] <= BYTE3[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE3[4] <= BYTE3[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE3[5] <= BYTE3[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE3[6] <= BYTE3[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BYTE3[7] <= BYTE3[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|send_pc:ENVIA_PC
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => DONE~reg0.CLK
clk => EN_TX~reg0.CLK
clk => RESPONSE_DATA[0]~reg0.CLK
clk => RESPONSE_DATA[1]~reg0.CLK
clk => RESPONSE_DATA[2]~reg0.CLK
clk => RESPONSE_DATA[3]~reg0.CLK
clk => RESPONSE_DATA[4]~reg0.CLK
clk => RESPONSE_DATA[5]~reg0.CLK
clk => RESPONSE_DATA[6]~reg0.CLK
clk => RESPONSE_DATA[7]~reg0.CLK
EN => EN_TX.OUTPUTSELECT
EN => DONE.OUTPUTSELECT
EN => count.OUTPUTSELECT
EN => count.OUTPUTSELECT
EN => count.OUTPUTSELECT
EN => RESPONSE_DATA[0]~reg0.ENA
EN => RESPONSE_DATA[1]~reg0.ENA
EN => RESPONSE_DATA[2]~reg0.ENA
EN => RESPONSE_DATA[3]~reg0.ENA
EN => RESPONSE_DATA[4]~reg0.ENA
EN => RESPONSE_DATA[5]~reg0.ENA
EN => RESPONSE_DATA[6]~reg0.ENA
EN => RESPONSE_DATA[7]~reg0.ENA
BYTE1[0] => Mux7.IN0
BYTE1[0] => Mux7.IN1
BYTE1[1] => Mux6.IN0
BYTE1[1] => Mux6.IN1
BYTE1[2] => Mux5.IN0
BYTE1[2] => Mux5.IN1
BYTE1[3] => Mux4.IN0
BYTE1[3] => Mux4.IN1
BYTE1[4] => Mux3.IN0
BYTE1[4] => Mux3.IN1
BYTE1[5] => Mux2.IN0
BYTE1[5] => Mux2.IN1
BYTE1[6] => Mux1.IN0
BYTE1[6] => Mux1.IN1
BYTE1[7] => Mux0.IN0
BYTE1[7] => Mux0.IN1
BYTE2[0] => Mux7.IN2
BYTE2[1] => Mux6.IN2
BYTE2[2] => Mux5.IN2
BYTE2[3] => Mux4.IN2
BYTE2[4] => Mux3.IN2
BYTE2[5] => Mux2.IN2
BYTE2[6] => Mux1.IN2
BYTE2[7] => Mux0.IN2
BYTE3[0] => Mux7.IN3
BYTE3[1] => Mux6.IN3
BYTE3[2] => Mux5.IN3
BYTE3[3] => Mux4.IN3
BYTE3[4] => Mux3.IN3
BYTE3[5] => Mux2.IN3
BYTE3[6] => Mux1.IN3
BYTE3[7] => Mux0.IN3
BUSY_TX => RESPONSE_DATA.OUTPUTSELECT
BUSY_TX => RESPONSE_DATA.OUTPUTSELECT
BUSY_TX => RESPONSE_DATA.OUTPUTSELECT
BUSY_TX => RESPONSE_DATA.OUTPUTSELECT
BUSY_TX => RESPONSE_DATA.OUTPUTSELECT
BUSY_TX => RESPONSE_DATA.OUTPUTSELECT
BUSY_TX => RESPONSE_DATA.OUTPUTSELECT
BUSY_TX => RESPONSE_DATA.OUTPUTSELECT
BUSY_TX => EN_TX.OUTPUTSELECT
BUSY_TX => DONE.OUTPUTSELECT
BUSY_TX => count.OUTPUTSELECT
BUSY_TX => count.OUTPUTSELECT
BUSY_TX => count.OUTPUTSELECT
EN_TX <= EN_TX~reg0.DB_MAX_OUTPUT_PORT_TYPE
DONE <= DONE~reg0.DB_MAX_OUTPUT_PORT_TYPE
RESPONSE_DATA[0] <= RESPONSE_DATA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RESPONSE_DATA[1] <= RESPONSE_DATA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RESPONSE_DATA[2] <= RESPONSE_DATA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RESPONSE_DATA[3] <= RESPONSE_DATA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RESPONSE_DATA[4] <= RESPONSE_DATA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RESPONSE_DATA[5] <= RESPONSE_DATA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RESPONSE_DATA[6] <= RESPONSE_DATA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RESPONSE_DATA[7] <= RESPONSE_DATA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


